name: Go Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [386, amd64, arm64]
    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'
    - name: Check out code
      uses: actions/checkout@v4
    - name: Set up QEMU
      if: matrix.os != 'windows-latest' && (matrix.arch == 'arm64' || matrix.arch == 'arm')
      uses: docker/setup-qemu-action@v2
    - name: Build
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          GOOS="linux"
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          GOOS="darwin"
        else
          GOOS="windows"
        fi
        GOARCH="${{ matrix.arch }}"
        OUTPUT_NAME="kerbrute-$GOOS-$GOARCH"
        go build -o $OUTPUT_NAME
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: kerbrute-${{ matrix.os }}-${{ matrix.arch }}
        path: ./${{ env.OUTPUT_NAME }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: downloads
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: downloads/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
